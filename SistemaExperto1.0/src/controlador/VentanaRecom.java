package controlador;


import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Image;
import java.io.UnsupportedEncodingException;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLEncoder;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JList;
import javax.swing.ListSelectionModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author USUARIO
 */
public class VentanaRecom extends javax.swing.JFrame {
    public HashMap<String,PuntoTuristico> recomendaciones = new HashMap<>();

    public void setRecomendaciones(HashMap<String, PuntoTuristico> recomendaciones) {
        this.recomendaciones = recomendaciones;
    }

    private void setLista(){
        DefaultListModel listModel = new DefaultListModel();
        Iterator it = recomendaciones.entrySet().iterator();
        int i = 1;
       while(it.hasNext()){
            Map.Entry e = (Map.Entry)it.next();
            String nombrePunto = (String)e.getKey();
            PuntoTuristico p = (PuntoTuristico)e.getValue();
            if(p!=null){
                listModel.addElement(i+". "+nombrePunto);
                i++;
            }
       }
        ListaR = new JList(listModel);
        Font font;
        font = new Font("Tempus Sans ITC", Font.BOLD, 14);
        Font font2;
        font2 = new Font("Tempus Sans ITC", Font.BOLD, 14);
        ListaR.setFont(font);
        ListaR.setBackground(Color.DARK_GRAY);
        ListaR.setForeground(Color.WHITE);
        ListaR.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        ListaR.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        jScrollPane1.setViewportView(ListaR);
    }
    /**
     * Creates new form NewJFrame
     */
    public VentanaRecom() {
        initComponents();
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JLABEL_MAPA = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListaR = new javax.swing.JList();
        titulo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        JLABEL_MAPA.setText("jLabel1");
        JLABEL_MAPA.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        ListaR.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(ListaR);

        titulo.setFont(new java.awt.Font("Trajan Pro 3", 1, 14)); // NOI18N
        titulo.setText("Recomendaciones");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JLABEL_MAPA, javax.swing.GroupLayout.PREFERRED_SIZE, 616, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(titulo))
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(titulo)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(208, Short.MAX_VALUE))
            .addComponent(JLABEL_MAPA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public String markers(){
       String markers="";
       HashMap<String,PuntoTuristico>pt=recomendaciones;
       Iterator it = pt.entrySet().iterator();
       int i=1;
       while(it.hasNext()){
            Map.Entry e = (Map.Entry)it.next();
            PuntoTuristico p = (PuntoTuristico)e.getValue();
            if(p!=null){
                markers+="&markers=color:red%7Clabel:"+i+"%7C"+p.getLongitud()+","+p.getLatitud();
                i++;
            }
       }
       return markers;
       
   }
    
    public Image getStaticMap(String centerAddress,int zoom,Dimension size,int scale,String format, String maptype) throws MalformedURLException, UnsupportedEncodingException{
        String URLRoot = "http://maps.googleapis.com/maps/api/staticmap";
        URL url=new URL(URLRoot + "?center=" + URLEncoder.encode(centerAddress, "utf-8") + "&zoom=" + zoom +
                "&size=" + size.width + "x" + size.height + "&scale=" + scale +
                "&format=" + format+ "&maptype=" + maptype + markers()+
                "&region=es&language=es&sensor=false" 
                );
       
        try {
            Image imageReturn;
            imageReturn=ImageIO.read(url);
            //storeInfoRequest(url,null,null,null);
            return imageReturn;
        } catch (Exception e) {
            System.out.println(e);
            return null;
        }
        
     }
    
    public void crearMapa() throws MalformedURLException, UnsupportedEncodingException{
             this.JLABEL_MAPA.setText("");
             Image imagenMapa=getStaticMap("ecuador",
                     Integer.valueOf(7),new Dimension(1000,1000),
                     Integer.valueOf(1),"png",
                     "roadmap");
            if(imagenMapa!=null){
                ImageIcon imgIcon=new ImageIcon(imagenMapa);
                Icon iconImage=(Icon)imgIcon;
                JLABEL_MAPA.setIcon(iconImage);
            }  
            setLista();
            this.setVisible(true);
            //this.setVisible(true);
     }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaRecom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaRecom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaRecom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaRecom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VentanaRecom v=new VentanaRecom();
                try {
                    v.crearMapa();
                } catch (MalformedURLException ex) {
                    Logger.getLogger(VentanaRecom.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedEncodingException ex) {
                    Logger.getLogger(VentanaRecom.class.getName()).log(Level.SEVERE, null, ex);
                }
                //v.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JLABEL_MAPA;
    private javax.swing.JList ListaR;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel titulo;
    // End of variables declaration//GEN-END:variables
}
